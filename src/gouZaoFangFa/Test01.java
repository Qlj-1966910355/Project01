package gouZaoFangFa;
// 构造方法

/**
 * 1、构造方法：又称构造函数/构造器/Constructor
 * <p>
 * 2、构造方法与普通方法语法对比
 *      构造方法的语法：
 *              [修饰符列表] 构造方法名(形参){
 *                  构造方法体;
 *              }
 *      普通方法语法：
 *              [修饰符列表] 返回值类型 方法名(形参){
 *                  方法体;
 *              }
 * 注：封装的方法有返回值类型，不属于构造方法，与普通方法不同点在于封装的方法不需要写修饰符static，且调用方式不同。
 * <p>
 * 3、对于构造方法，“返回值类型”不需要指定，并且不能写void，写上void就变成了普通方法
 * <p>
 * 4、*********构造方法的方法名必须与类名保持一致**********
 * <p>
 * 5、构造方法的作用？
 * 构造方法存在的意义是，通过构造方法的调用，可以创建对象。
 * *** 创建对象时，通常语法为：new 类名();
 * *** 但方法的调用才会使用到"()",而创建对象时使用在这种语法，表名创建对象的实质是调用了类中的构造方法。
 * <p>
 * 6、构造方法怎样调用？
 *      普通方法的调用：
 *          存在static修饰符：
 *                      类名.方法名(实参);
 *          不存在static修饰符：
 *                      引用.方法名(
 *                      );
 *      构造方法的调用:
 *          new 方法名(实参)       // 此时调用方式就是创建对象语法。
 * <p>
 * 7、构造方法不写返回值类型，说明没有返回值吗？
 * 构造方法没有返回值类型，但有返回值，返回值类型是该类本身（引用数据类型）。
 * 原因：
 *      创建对象语法：类名 局部变量 = new 类名();
 *      由于创建对象的过程就是调用构造方法，因此可以看出：new 类名()返回一个类型为类名的引用数据类型，所以
 *      **返回值就是该对象所在的地址。**
 * <p>
 *      创建对象的实质：
 *          也就是说：创建对象时实质是在调用类中系统隐式无参构造方法
 * <p>
 * 8、当类中创建了一个有参的构造方法后，系统将不提供隐式的无参构造方法
 * <p>
 * 9、前面提到构造方法的方法名必须与类名的名称一致。
 *    因此，创建多个构造方法时，这若干个方法就形成了方法重构。创建对象时，填写不同方式的形参调用对应的构造方法。
 */


public class Test01 {
    public static void main(String[] args) {

        // 创建对象
        User var_1 = new User();
        User var_2 = new User(23);
        User var_3 = new User("屈刘杰");
        User var_4 = new User(23, "屈刘杰");

        System.out.println("-------------------------------------------");

        // 访问并修改属性
        var_1.setName("屈刘杰");
        System.out.println("对象1修改属性后访问：" + var_1.getName());

        var_2.setName("许永琪");
        System.out.println("对象2修改属性后访问：" + var_2.getName());

        var_3.setName("王泽轩");
        System.out.println("对象3修改属性后访问：" + var_3.getName());

        var_4.setName("肖嘉庆");
        System.out.println("对象4修改属性后访问：" + var_4.getName());

    }

}
